/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project1;

import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author Mr. VJ
 */
public class FrameStack extends javax.swing.JFrame {

    //Properti List
    private List<Object> list = new ArrayList<Object>();
    //Properti current Index
    private int currentIndex = -1;
    
    /**
     * Creates new form FrameStack
     */
    public FrameStack() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton4 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        cekStackButton = new javax.swing.JButton();
        pushButton = new javax.swing.JButton();
        pushTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        textArea = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        cekPeekStack = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        popButton = new javax.swing.JButton();
        showAllData = new javax.swing.JButton();

        jButton4.setText("jButton4");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Implementasi Stack");

        cekStackButton.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        cekStackButton.setText("Jumlah Stack");
        cekStackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cekStackButtonActionPerformed(evt);
            }
        });

        pushButton.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        pushButton.setText("Push");
        pushButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pushButtonActionPerformed(evt);
            }
        });

        pushTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pushTextFieldActionPerformed(evt);
            }
        });

        textArea.setColumns(20);
        textArea.setRows(5);
        jScrollPane1.setViewportView(textArea);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabel2.setText("Masukkan data yang ingin di push ke dalam Stack");

        cekPeekStack.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        cekPeekStack.setText("Data Teratas");
        cekPeekStack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cekPeekStackActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabel3.setText("Keluarkan data dari Stack dengan tombol pop ini");

        popButton.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        popButton.setText("Pop");
        popButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popButtonActionPerformed(evt);
            }
        });

        showAllData.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        showAllData.setText("Tampilkan Semua Data");
        showAllData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showAllDataActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(pushTextField)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pushButton))
                            .addComponent(jLabel3)
                            .addComponent(popButton)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cekStackButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cekPeekStack)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(showAllData)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pushTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pushButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(popButton)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cekStackButton)
                    .addComponent(cekPeekStack)
                    .addComponent(showAllData))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //Method untuk mengetahui jumlah data di dalam Stack
    private void cekStackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cekStackButtonActionPerformed
        //hapus text pada text area
        textArea.setText("");
        //variabel count mengambil jumlah isi data pada list
        int count = list.size();
        //ubah variabel count menjadi tipe data string
        String countStr = Integer.toString(count);
        //Tulis keterangan dalam text area
        textArea.setText("Jumlah data di dalam Stack = " + countStr);
    }//GEN-LAST:event_cekStackButtonActionPerformed

    private void pushButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pushButtonActionPerformed
        //hapus text pada text area
        textArea.setText("");
        //variabel objcetPush untuk mengambil data yang dimasukkan dalam pushTextField
        Object objectPush = pushTextField.getText();
        //masukkan data ke dalam list
        list.add(objectPush);
        //current index ditambah satu
        currentIndex++;
        //hapus text pada pushTextField
        pushTextField.setText("");
        //Tulis keterangan dalam text area
        textArea.setText("Berhasil Push object " + objectPush + " dari Stack");
    }//GEN-LAST:event_pushButtonActionPerformed

    private void cekPeekStackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cekPeekStackActionPerformed
        //Cek apakah current index kurang dari 0
        if(currentIndex < 0)
            //jika iya maka tulis keterangan pada text area bahwa Tidak ada data pada Stack
            textArea.setText("Tidak ada data pada Stack" );
        else {
            //jika tidak maka masuk step berikut
            //hapus text pada text area
            textArea.setText("");
            //variabel objectPeek untuk mengambil data paling atas pada list
            Object objectPeek = list.get(currentIndex);
            //Tulis keterangan dalam text area
            textArea.setText("Data teratas pada Stack = " + objectPeek);
        }
        
    }//GEN-LAST:event_cekPeekStackActionPerformed

    private void popButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popButtonActionPerformed
        //Cek apakah current index kurang dari 0        
        if(currentIndex < 0)
            //jika iya maka tulis keterangan pada text area bahwa Tidak ada data pada Stack
            textArea.setText("Tidak ada data pada Stack" );
        else {
            //jika tidak maka masuk step berikut
            //hapus text pada text area
            textArea.setText("");
            //variabel objectPop untuk mengambil data paling atas pada list
            Object objectPop = list.get(currentIndex);
            //hapus data yang berada paling atas pada list
            list.remove(currentIndex);
            //current index berkurang satu
            currentIndex--;
            //Tulis keterangan dalam text area
            textArea.setText("Berhasil Pop object " + objectPop + " dari Stack" );
        }
        
    }//GEN-LAST:event_popButtonActionPerformed

    private void pushTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pushTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pushTextFieldActionPerformed

    private void showAllDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showAllDataActionPerformed
        //Cek apakah current index kurang dari 0    
        if(currentIndex < 0)
            //jika iya maka tulis keterangan pada text area bahwa Tidak ada data pada Stack
            textArea.setText("Tidak ada data pada Stack" );
        else {
            //jika tidak maka masuk step berikut
            //hapus text pada text area
            textArea.setText("");
            //iterasi untuk mengambil data dari list dan ditampilkan di text area
            for(int i = currentIndex; i > -1; i--) {
                //variabel objectShow untuk mengambil data dari index yang diiterasikan
                Object objectShow = list.get(i);
                /*
                Tulis keterangan dalam text area
                */
                textArea.append(objectShow.toString());
                textArea.append("\n");
                }
            }
    }//GEN-LAST:event_showAllDataActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameStack.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameStack.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameStack.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameStack.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameStack().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cekPeekStack;
    private javax.swing.JButton cekStackButton;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton popButton;
    private javax.swing.JButton pushButton;
    private javax.swing.JTextField pushTextField;
    private javax.swing.JButton showAllData;
    private javax.swing.JTextArea textArea;
    // End of variables declaration//GEN-END:variables
}
